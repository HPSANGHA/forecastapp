

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class PMApprovalReport : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the PMApprovalReport entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PMApprovalReport()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PMApprovalReport(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.PMApprovalReport> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.PMApprovalReport.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMApprovalReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMApprovalReport_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ConsolidateID
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ConsolidateID);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ConsolidateID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsolidateID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsolidateID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsolidateID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TYPE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.TYPE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.TYPE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TYPE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TYPE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TYPE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PHASE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PHASE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PHASE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PHASE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PHASE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PHASE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> STARTWEEKDATE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.STARTWEEKDATE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.STARTWEEKDATE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void STARTWEEKDATE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void STARTWEEKDATE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void STARTWEEKDATE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> WEEK
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.WEEK);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.WEEK, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WEEK_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WEEK_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WEEK_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string APPLICATION1
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.APPLICATION1);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.APPLICATION1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void APPLICATION1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void APPLICATION1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void APPLICATION1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> c_DATE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.c_DATE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.c_DATE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_DATE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_DATE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_DATE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RESOURCE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.RESOURCE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.RESOURCE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RESOURCE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RESOURCE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RESOURCE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DELIVERABLES
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.DELIVERABLES);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.DELIVERABLES, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DELIVERABLES_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DELIVERABLES_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DELIVERABLES_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ACTIVITY
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ACTIVITY);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ACTIVITY, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ACTIVITY_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ACTIVITY_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ACTIVITY_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> HOURS
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.HOURS);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.HOURS, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HOURS_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HOURS_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HOURS_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> RATEPERDAY
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.RATEPERDAY);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.RATEPERDAY, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RATEPERDAY_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RATEPERDAY_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RATEPERDAY_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PHASE_NOTCHANGE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PHASE_NOTCHANGE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PHASE_NOTCHANGE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PHASE_NOTCHANGE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PHASE_NOTCHANGE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PHASE_NOTCHANGE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> BILLEDHOURS
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.BILLEDHOURS);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.BILLEDHOURS, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BILLEDHOURS_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BILLEDHOURS_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BILLEDHOURS_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> BILLEDVALUE
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.BILLEDVALUE);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.BILLEDVALUE, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BILLEDVALUE_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BILLEDVALUE_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BILLEDVALUE_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PMName
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PMName);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PMName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PMEmail
        {
            get
            {
                return global::LightSwitchApplication.PMApprovalReport.DetailsClass.GetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PMEmail);
            }
            set
            {
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.SetValue(this, global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PMEmail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMEmail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMEmail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMEmail_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.PMApprovalReport,
                global::LightSwitchApplication.PMApprovalReport.DetailsClass,
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.IImplementation,
                global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ConsolidateID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass>.Entry
                __PMApprovalReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.PMApprovalReport.DetailsClass.__PMApprovalReport_CreateNew,
                    global::LightSwitchApplication.PMApprovalReport.DetailsClass.__PMApprovalReport_Created,
                    global::LightSwitchApplication.PMApprovalReport.DetailsClass.__PMApprovalReport_AllowSaveWithErrors);
            private static global::LightSwitchApplication.PMApprovalReport __PMApprovalReport_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.PMApprovalReport> es)
            {
                return new global::LightSwitchApplication.PMApprovalReport(es);
            }
            private static void __PMApprovalReport_Created(global::LightSwitchApplication.PMApprovalReport e)
            {
                e.PMApprovalReport_Created();
            }
            private static bool __PMApprovalReport_AllowSaveWithErrors(global::LightSwitchApplication.PMApprovalReport e)
            {
                bool result = false;
                e.PMApprovalReport_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, int> ConsolidateID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ConsolidateID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> TYPE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.TYPE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> PHASE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PHASE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>> STARTWEEKDATE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.STARTWEEKDATE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<int>> WEEK
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.WEEK) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> APPLICATION1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.APPLICATION1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>> c_DATE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.c_DATE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> RESOURCE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.RESOURCE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> DELIVERABLES
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.DELIVERABLES) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> ACTIVITY
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.ACTIVITY) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>> HOURS
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.HOURS) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>> RATEPERDAY
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.RATEPERDAY) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> PHASE_NOTCHANGE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PHASE_NOTCHANGE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>> BILLEDHOURS
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.BILLEDHOURS) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>> BILLEDVALUE
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.BILLEDVALUE) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> PMName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PMName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string> PMEmail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties.PMEmail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ConsolidateID { get; set; }
                new string TYPE { get; set; }
                new string PHASE { get; set; }
                new global::System.Nullable<global::System.DateTime> STARTWEEKDATE { get; set; }
                new global::System.Nullable<int> WEEK { get; set; }
                new string APPLICATION1 { get; set; }
                new global::System.Nullable<global::System.DateTime> c_DATE { get; set; }
                new string RESOURCE { get; set; }
                new string DELIVERABLES { get; set; }
                new string ACTIVITY { get; set; }
                new global::System.Nullable<double> HOURS { get; set; }
                new global::System.Nullable<double> RATEPERDAY { get; set; }
                new string PHASE_NOTCHANGE { get; set; }
                new global::System.Nullable<double> BILLEDHOURS { get; set; }
                new global::System.Nullable<double> BILLEDVALUE { get; set; }
                new string PMName { get; set; }
                new string PMEmail { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, int>.Entry
                    ConsolidateID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, int>.Entry(
                        "ConsolidateID",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ConsolidateID_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ConsolidateID_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ConsolidateID_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ConsolidateID_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ConsolidateID_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ConsolidateID_OnValueChanged);
                private static void _ConsolidateID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, int>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ConsolidateID, sf);
                }
                private static bool _ConsolidateID_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.ConsolidateID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConsolidateID_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConsolidateID_Validate(r);
                }
                private static int _ConsolidateID_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.ConsolidateID;
                }
                private static void _ConsolidateID_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ConsolidateID = v;
                }
                private static void _ConsolidateID_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.ConsolidateID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    TYPE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "TYPE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._TYPE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._TYPE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._TYPE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._TYPE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._TYPE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._TYPE_OnValueChanged);
                private static void _TYPE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._TYPE, sf);
                }
                private static bool _TYPE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.TYPE_IsReadOnly(ref result);
                    return result;
                }
                private static void _TYPE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TYPE_Validate(r);
                }
                private static string _TYPE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.TYPE;
                }
                private static void _TYPE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TYPE = v;
                }
                private static void _TYPE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.TYPE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    PHASE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "PHASE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_OnValueChanged);
                private static void _PHASE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._PHASE, sf);
                }
                private static bool _PHASE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.PHASE_IsReadOnly(ref result);
                    return result;
                }
                private static void _PHASE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PHASE_Validate(r);
                }
                private static string _PHASE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.PHASE;
                }
                private static void _PHASE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PHASE = v;
                }
                private static void _PHASE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.PHASE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    STARTWEEKDATE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "STARTWEEKDATE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._STARTWEEKDATE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._STARTWEEKDATE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._STARTWEEKDATE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._STARTWEEKDATE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._STARTWEEKDATE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._STARTWEEKDATE_OnValueChanged);
                private static void _STARTWEEKDATE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._STARTWEEKDATE, sf);
                }
                private static bool _STARTWEEKDATE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.STARTWEEKDATE_IsReadOnly(ref result);
                    return result;
                }
                private static void _STARTWEEKDATE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.STARTWEEKDATE_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _STARTWEEKDATE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.STARTWEEKDATE;
                }
                private static void _STARTWEEKDATE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.STARTWEEKDATE = global::LightSwitchApplication.PMApprovalReport.DetailsClass.TruncateDate(v);
                }
                private static void _STARTWEEKDATE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.STARTWEEKDATE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<int>>.Entry
                    WEEK = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<int>>.Entry(
                        "WEEK",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._WEEK_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._WEEK_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._WEEK_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._WEEK_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._WEEK_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._WEEK_OnValueChanged);
                private static void _WEEK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._WEEK, sf);
                }
                private static bool _WEEK_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.WEEK_IsReadOnly(ref result);
                    return result;
                }
                private static void _WEEK_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WEEK_Validate(r);
                }
                private static global::System.Nullable<int> _WEEK_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.WEEK;
                }
                private static void _WEEK_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.WEEK = v;
                }
                private static void _WEEK_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.WEEK_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    APPLICATION1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "APPLICATION1",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._APPLICATION1_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._APPLICATION1_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._APPLICATION1_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._APPLICATION1_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._APPLICATION1_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._APPLICATION1_OnValueChanged);
                private static void _APPLICATION1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._APPLICATION1, sf);
                }
                private static bool _APPLICATION1_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.APPLICATION1_IsReadOnly(ref result);
                    return result;
                }
                private static void _APPLICATION1_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.APPLICATION1_Validate(r);
                }
                private static string _APPLICATION1_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.APPLICATION1;
                }
                private static void _APPLICATION1_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.APPLICATION1 = v;
                }
                private static void _APPLICATION1_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.APPLICATION1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    c_DATE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "c_DATE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._c_DATE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._c_DATE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._c_DATE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._c_DATE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._c_DATE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._c_DATE_OnValueChanged);
                private static void _c_DATE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._c_DATE, sf);
                }
                private static bool _c_DATE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.c_DATE_IsReadOnly(ref result);
                    return result;
                }
                private static void _c_DATE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.c_DATE_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _c_DATE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.c_DATE;
                }
                private static void _c_DATE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.c_DATE = global::LightSwitchApplication.PMApprovalReport.DetailsClass.TruncateDate(v);
                }
                private static void _c_DATE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.c_DATE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    RESOURCE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "RESOURCE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RESOURCE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RESOURCE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RESOURCE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RESOURCE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RESOURCE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RESOURCE_OnValueChanged);
                private static void _RESOURCE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._RESOURCE, sf);
                }
                private static bool _RESOURCE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.RESOURCE_IsReadOnly(ref result);
                    return result;
                }
                private static void _RESOURCE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RESOURCE_Validate(r);
                }
                private static string _RESOURCE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.RESOURCE;
                }
                private static void _RESOURCE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RESOURCE = v;
                }
                private static void _RESOURCE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.RESOURCE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    DELIVERABLES = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "DELIVERABLES",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._DELIVERABLES_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._DELIVERABLES_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._DELIVERABLES_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._DELIVERABLES_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._DELIVERABLES_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._DELIVERABLES_OnValueChanged);
                private static void _DELIVERABLES_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._DELIVERABLES, sf);
                }
                private static bool _DELIVERABLES_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.DELIVERABLES_IsReadOnly(ref result);
                    return result;
                }
                private static void _DELIVERABLES_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DELIVERABLES_Validate(r);
                }
                private static string _DELIVERABLES_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.DELIVERABLES;
                }
                private static void _DELIVERABLES_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DELIVERABLES = v;
                }
                private static void _DELIVERABLES_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.DELIVERABLES_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    ACTIVITY = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "ACTIVITY",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ACTIVITY_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ACTIVITY_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ACTIVITY_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ACTIVITY_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ACTIVITY_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._ACTIVITY_OnValueChanged);
                private static void _ACTIVITY_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ACTIVITY, sf);
                }
                private static bool _ACTIVITY_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.ACTIVITY_IsReadOnly(ref result);
                    return result;
                }
                private static void _ACTIVITY_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ACTIVITY_Validate(r);
                }
                private static string _ACTIVITY_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.ACTIVITY;
                }
                private static void _ACTIVITY_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ACTIVITY = v;
                }
                private static void _ACTIVITY_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.ACTIVITY_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry
                    HOURS = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry(
                        "HOURS",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._HOURS_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._HOURS_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._HOURS_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._HOURS_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._HOURS_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._HOURS_OnValueChanged);
                private static void _HOURS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._HOURS, sf);
                }
                private static bool _HOURS_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.HOURS_IsReadOnly(ref result);
                    return result;
                }
                private static void _HOURS_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HOURS_Validate(r);
                }
                private static global::System.Nullable<double> _HOURS_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.HOURS;
                }
                private static void _HOURS_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.HOURS = v;
                }
                private static void _HOURS_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.HOURS_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry
                    RATEPERDAY = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry(
                        "RATEPERDAY",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RATEPERDAY_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RATEPERDAY_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RATEPERDAY_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RATEPERDAY_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RATEPERDAY_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._RATEPERDAY_OnValueChanged);
                private static void _RATEPERDAY_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._RATEPERDAY, sf);
                }
                private static bool _RATEPERDAY_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.RATEPERDAY_IsReadOnly(ref result);
                    return result;
                }
                private static void _RATEPERDAY_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RATEPERDAY_Validate(r);
                }
                private static global::System.Nullable<double> _RATEPERDAY_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.RATEPERDAY;
                }
                private static void _RATEPERDAY_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.RATEPERDAY = v;
                }
                private static void _RATEPERDAY_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.RATEPERDAY_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    PHASE_NOTCHANGE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "PHASE_NOTCHANGE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_NOTCHANGE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_NOTCHANGE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_NOTCHANGE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_NOTCHANGE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_NOTCHANGE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PHASE_NOTCHANGE_OnValueChanged);
                private static void _PHASE_NOTCHANGE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._PHASE_NOTCHANGE, sf);
                }
                private static bool _PHASE_NOTCHANGE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.PHASE_NOTCHANGE_IsReadOnly(ref result);
                    return result;
                }
                private static void _PHASE_NOTCHANGE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PHASE_NOTCHANGE_Validate(r);
                }
                private static string _PHASE_NOTCHANGE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.PHASE_NOTCHANGE;
                }
                private static void _PHASE_NOTCHANGE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PHASE_NOTCHANGE = v;
                }
                private static void _PHASE_NOTCHANGE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.PHASE_NOTCHANGE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry
                    BILLEDHOURS = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry(
                        "BILLEDHOURS",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDHOURS_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDHOURS_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDHOURS_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDHOURS_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDHOURS_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDHOURS_OnValueChanged);
                private static void _BILLEDHOURS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._BILLEDHOURS, sf);
                }
                private static bool _BILLEDHOURS_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.BILLEDHOURS_IsReadOnly(ref result);
                    return result;
                }
                private static void _BILLEDHOURS_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BILLEDHOURS_Validate(r);
                }
                private static global::System.Nullable<double> _BILLEDHOURS_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.BILLEDHOURS;
                }
                private static void _BILLEDHOURS_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.BILLEDHOURS = v;
                }
                private static void _BILLEDHOURS_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.BILLEDHOURS_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry
                    BILLEDVALUE = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Entry(
                        "BILLEDVALUE",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDVALUE_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDVALUE_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDVALUE_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDVALUE_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDVALUE_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._BILLEDVALUE_OnValueChanged);
                private static void _BILLEDVALUE_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._BILLEDVALUE, sf);
                }
                private static bool _BILLEDVALUE_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.BILLEDVALUE_IsReadOnly(ref result);
                    return result;
                }
                private static void _BILLEDVALUE_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BILLEDVALUE_Validate(r);
                }
                private static global::System.Nullable<double> _BILLEDVALUE_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.BILLEDVALUE;
                }
                private static void _BILLEDVALUE_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.BILLEDVALUE = v;
                }
                private static void _BILLEDVALUE_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.BILLEDVALUE_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    PMName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "PMName",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMName_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMName_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMName_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMName_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMName_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMName_OnValueChanged);
                private static void _PMName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._PMName, sf);
                }
                private static bool _PMName_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.PMName_IsReadOnly(ref result);
                    return result;
                }
                private static void _PMName_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PMName_Validate(r);
                }
                private static string _PMName_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.PMName;
                }
                private static void _PMName_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PMName = v;
                }
                private static void _PMName_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.PMName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry
                    PMEmail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Entry(
                        "PMEmail",
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMEmail_Stub,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMEmail_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMEmail_Validate,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMEmail_GetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMEmail_SetImplementationValue,
                        global::LightSwitchApplication.PMApprovalReport.DetailsClass.PropertySetProperties._PMEmail_OnValueChanged);
                private static void _PMEmail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMApprovalReport.DetailsClass d, object sf)
                {
                    c(d, ref d._PMEmail, sf);
                }
                private static bool _PMEmail_ComputeIsReadOnly(global::LightSwitchApplication.PMApprovalReport e)
                {
                    bool result = false;
                    e.PMEmail_IsReadOnly(ref result);
                    return result;
                }
                private static void _PMEmail_Validate(global::LightSwitchApplication.PMApprovalReport e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PMEmail_Validate(r);
                }
                private static string _PMEmail_GetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d)
                {
                    return d.ImplementationEntity.PMEmail;
                }
                private static void _PMEmail_SetImplementationValue(global::LightSwitchApplication.PMApprovalReport.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PMEmail = v;
                }
                private static void _PMEmail_OnValueChanged(global::LightSwitchApplication.PMApprovalReport e)
                {
                    e.PMEmail_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, int>.Data _ConsolidateID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _TYPE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _PHASE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _STARTWEEKDATE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<int>>.Data _WEEK;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _APPLICATION1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _c_DATE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _RESOURCE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _DELIVERABLES;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _ACTIVITY;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data _HOURS;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data _RATEPERDAY;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _PHASE_NOTCHANGE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data _BILLEDHOURS;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, global::System.Nullable<double>>.Data _BILLEDVALUE;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _PMName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMApprovalReport, global::LightSwitchApplication.PMApprovalReport.DetailsClass, string>.Data _PMEmail;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class REF_APPLICATION_TYPE : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the REF_APPLICATION_TYPE entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REF_APPLICATION_TYPE()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REF_APPLICATION_TYPE(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.REF_APPLICATION_TYPE> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void REF_APPLICATION_TYPE_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void REF_APPLICATION_TYPE_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public short ApplicationTypeID
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ApplicationTypeID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationTypeID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationTypeID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationTypeID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.SetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.SetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.SetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedTime
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.CreatedTime);
            }
            set
            {
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.SetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.CreatedTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.SetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ModifiedDate);
            }
            set
            {
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.SetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ModifiedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TP> TPs
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetValue(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.TPs);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TP> TPsQuery
        {
            get
            {
                return global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.GetQuery(this, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.TPs);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.REF_APPLICATION_TYPE,
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass,
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.IImplementation,
                global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ApplicationTypeID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass>.Entry
                __REF_APPLICATION_TYPEEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass>.Entry(
                    global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.__REF_APPLICATION_TYPE_CreateNew,
                    global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.__REF_APPLICATION_TYPE_Created,
                    global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.__REF_APPLICATION_TYPE_AllowSaveWithErrors);
            private static global::LightSwitchApplication.REF_APPLICATION_TYPE __REF_APPLICATION_TYPE_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.REF_APPLICATION_TYPE> es)
            {
                return new global::LightSwitchApplication.REF_APPLICATION_TYPE(es);
            }
            private static void __REF_APPLICATION_TYPE_Created(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
            {
                e.REF_APPLICATION_TYPE_Created();
            }
            private static bool __REF_APPLICATION_TYPE_AllowSaveWithErrors(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
            {
                bool result = false;
                e.REF_APPLICATION_TYPE_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, short> ApplicationTypeID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ApplicationTypeID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, short>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.CreatedTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.ModifiedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::LightSwitchApplication.TP> TPs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.TPs) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::LightSwitchApplication.TP>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new short ApplicationTypeID { get; }
                new string Name { get; set; }
                new string Description { get; set; }
                new string CreatedBy { get; set; }
                new global::System.Nullable<global::System.DateTime> CreatedTime { get; set; }
                new string ModifiedBy { get; set; }
                new global::System.Nullable<global::System.DateTime> ModifiedDate { get; set; }
                new global::System.Collections.IEnumerable TPs { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, short>.Entry
                    ApplicationTypeID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, short>.Entry(
                        "ApplicationTypeID",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ApplicationTypeID_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ApplicationTypeID_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ApplicationTypeID_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ApplicationTypeID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ApplicationTypeID_OnValueChanged);
                private static void _ApplicationTypeID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, short>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._ApplicationTypeID, sf);
                }
                private static bool _ApplicationTypeID_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.ApplicationTypeID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApplicationTypeID_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApplicationTypeID_Validate(r);
                }
                private static short _ApplicationTypeID_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.ApplicationTypeID;
                }
                private static void _ApplicationTypeID_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.ApplicationTypeID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedTime",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedTime_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedTime_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedTime_GetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedTime_SetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._CreatedTime_OnValueChanged);
                private static void _CreatedTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedTime, sf);
                }
                private static bool _CreatedTime_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.CreatedTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedTime_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedTime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedTime_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedTime;
                }
                private static void _CreatedTime_SetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CreatedTime = global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedTime_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.CreatedTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_SetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ModifiedBy = v;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedDate",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedDate_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedDate_Validate,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedDate_GetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedDate_SetImplementationValue,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._ModifiedDate_OnValueChanged);
                private static void _ModifiedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedDate, sf);
                }
                private static bool _ModifiedDate_ComputeIsReadOnly(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    bool result = false;
                    e.ModifiedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedDate_Validate(global::LightSwitchApplication.REF_APPLICATION_TYPE e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedDate_GetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedDate;
                }
                private static void _ModifiedDate_SetImplementationValue(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ModifiedDate = global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifiedDate_OnValueChanged(global::LightSwitchApplication.REF_APPLICATION_TYPE e)
                {
                    e.ModifiedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::LightSwitchApplication.TP>.Entry
                    TPs = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::LightSwitchApplication.TP>.Entry(
                        "TPs",
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._TPs_Stub,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._TPs_GetReferencedEntities,
                        global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties._TPs_GetEntityCollection);
                private static void _TPs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::LightSwitchApplication.TP>.Data> c, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d, object sf)
                {
                    c(d, ref d._TPs, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TP> _TPs_GetReferencedEntities(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TP, global::LightSwitchApplication.TP.DetailsClass>(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass.PropertySetProperties.TPs, ref d._TPs);
                }
                private static global::System.Collections.IEnumerable _TPs_GetEntityCollection(global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass d)
                {
                    return d.ImplementationEntity.TPs;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, short>.Data _ApplicationTypeID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.REF_APPLICATION_TYPE, global::LightSwitchApplication.REF_APPLICATION_TYPE.DetailsClass, global::LightSwitchApplication.TP>.Data _TPs;
            
        }
    
        #endregion
    }
    
    #endregion
}
